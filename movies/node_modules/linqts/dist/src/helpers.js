"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.keyComparer = exports.composeComparers = exports.negate = exports.equal = exports.isObj = void 0;
/**
 * Checks if the argument passed is an object
 */
exports.isObj = function (x) { return !!x && typeof x === 'object'; };
/**
 * Determine if two objects are equal
 */
exports.equal = function (a, b) {
    return Object.entries(a).every(function (_a) {
        var key = _a[0], val = _a[1];
        return exports.isObj(val) ? exports.equal(b[key], val) : b[key] === val;
    });
};
/**
 * Creates a function that negates the result of the predicate
 */
exports.negate = function (pred) { return function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return !pred.apply(void 0, args);
}; };
/**
 * Comparer helpers
 */
exports.composeComparers = function (previousComparer, currentComparer) { return function (a, b) {
    return previousComparer(a, b) || currentComparer(a, b);
}; };
exports.keyComparer = function (_keySelector, descending) { return function (a, b) {
    var sortKeyA = _keySelector(a);
    var sortKeyB = _keySelector(b);
    if (sortKeyA > sortKeyB) {
        return !descending ? 1 : -1;
    }
    else if (sortKeyA < sortKeyB) {
        return !descending ? -1 : 1;
    }
    else {
        return 0;
    }
}; };
//# sourceMappingURL=helpers.js.map